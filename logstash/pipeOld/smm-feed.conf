# input {
#     elasticsearch {
#       hosts => "125.212.211.60:9200"
#       index => "smm"
#       query => '{"query":{"bool":{"must":[{"term":{"_type":"feed"}}]}},"sort":[{"createdTime":{"order":"asc"}}]}'
#       size => 200
#       scroll => "5m"
#       docinfo => true
#     }
# }

input {
      elasticsearch {
        hosts => "es.production.mysite.org"
        index => "mydata-2018.09.*"
        query => '{ "query": { "query_string": { "query": "*" } } }'
        size => 500
        scroll => "5m"
        docinfo => true
      }
    }

filter {
    mutate  {
        gsub => [
          "page", "%{industry}_", "",
          "shareFrom","%{industry}_","",
          "feed","%{industry}_","",
          "comment","%{industry}_",""
        ]
        remove_field => [ "logErrorCrawler","logDetailErrorCrawler","segments","topics","number_extracted_words","number_rejected_words","defaultAspects","defaultEntities","lastUpdateTime","pid","ptype","pindex","platfrom","unchangedTime","industry","isAd","isHam","isQuest","isSentiment","comments","undefined"]
        copy => { "isCarRelated" => "isSubjectRelated" }
        copy => { "lastUpdatedTime" => "@timestamp" }
        add_field => { 
          "industries" => [
            "automotive"
          ]
        }
    }
    if [shareFrom]  {
      mutate {
          add_field => { 
              "[joinField][name]" => "share"
              "[joinField][parent]" => "%{shareFrom}"
          } 
      }
      ruby {
          code => 'event.set("[@metadata][index]", Date.parse(event.get("parentCreatedTime")).strftime("%Y-%m"))'
      }
    } else {
      mutate {
          add_field => { 
              "[joinField][name]" => "feed"
          } 
      }
      ruby {
          code => 'event.set("[@metadata][index]", Date.parse(event.get("createdTime")).strftime("%Y-%m"))'
      }
    }
}

output {
  if [shareFrom]  {
    elasticsearch {
      hosts => ["125.212.211.60:9201","125.212.211.61:9201"] 
      index => "smm-v11-%{[@metadata][index]}"
      document_id => "%{[@metadata][_id]}"
      routing => "%{shareFrom}"
      action => "update"
      doc_as_upsert => "true"
    }
  } else {
    elasticsearch {
      hosts => ["125.212.211.60:9201","125.212.211.61:9201"] 
      index => "smm-v11-%{[@metadata][index]}"
      document_id => "%{[@metadata][_id]}"
      action => "update"
      doc_as_upsert => "true"
    }
  }
  # stdout {
  #   codec => "dots"
  # }
  stdout { codec => rubydebug }
}